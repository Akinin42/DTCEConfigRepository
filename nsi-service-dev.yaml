server:
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: "x-your-remote-ip-header"
      protocol-header: "x-your-protocol-header"
      internal-proxies: "192\\.168\\.\\d{1,3}\\.\\d{1,3}"
      port-header: "X-Forwarded-Port"
    use-forward-headers: true
    use-relative-redirects: true
    redirect-context-root: false
  port: 9010

spring:
  security:
    oauth2:
      client:
        registration:
          nsi-service:
            provider: spring
            client-id: nsi-service
            client-secret: secret
            redirect-uri: "http://192.168.18.172:9010/login/oauth2/code/{registrationId}"
            scope: openid
            client-authentication-method: CLIENT_SECRET_BASIC
        provider:
          spring:
            issuer-uri: http://192.168.18.171:9040
  flyway:
    enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:nsi}?ApplicationName=${spring.application.name}
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 1234
#    password: 644CWQA2s2kQRr9
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  application:
    name: "@project.name@"
  banner:
    location: classpath:banner/banner.txt
pagination:
  filter:
    field-separator: ;
    level-separator: \.
    pattern: ([\.\w]+?)(::|!:|<<|>>|>:|<:|<>)([\w\s\.\(\)\-А-яЁё<>|%]+?)${pagination.filter.field-separator}
    local-date-format: yyyy-MM-dd
    offset-date-time-format: yyyy-MM-dd'T'HH:mm:ss'Z'
  sort:
    field-separator: ;
    pattern: ([\w\.]+?)(:)(\w+?)${pagination.sort.field-separator}
